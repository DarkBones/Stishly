var currencyChanged = false;

// auto-focus on account name field
$(document).on('show.bs.modal','#accountform', function () {
  setTimeout(function(){ 
    $('#accountform #account_name').trigger('focus');
  }, 500);
});

// auto-focus on transaction description field
$(document).on('show.bs.modal','#transactionform', function () {
  setTimeout(function(){ 
    $('#transactionform #transaction_description').trigger('focus');
  }, 500);
});



function changeTransactionType(type) {
  switch(type) {
    case 'transfer':
      $('#transactionform #single-account').hide();
      $('#transactionform #categories').hide();
      $('#transactionform #transfer-account').show();
      $('#transactionform #type').removeClass('bg-danger');
      $('#transactionform #type').addClass('bg-warning');
      $('#transactionform #type').removeClass('bg-success');
      break;
    case 'income':
      $('#transactionform #single-account').show();
      $('#transactionform #categories').show();
      $('#transactionform #transfer-account').hide();
      $('#transactionform #type').removeClass('bg-danger');
      $('#transactionform #type').removeClass('bg-warning');
      $('#transactionform #type').addClass('bg-success');
      break;
    default:
      $('#transactionform #single-account').show();
      $('#transactionform #categories').show();
      $('#transactionform #transfer-account').hide();
      $('#transactionform #type').addClass('bg-danger');
      $('#transactionform #type').removeClass('bg-warning');
      $('#transactionform #type').removeClass('bg-success');
  }
}

function changeTransactionMultiple(type){
  switch (type) {
    case 'single':
      $('#transactionform #amount').show();
      $('#transactionform #transactions').hide();
      break;
    default:
      $('#transactionform #amount').hide();
      $('#transactionform #transactions').show();
      // update the total amount
      updateTransactionsTotal('#transactionform #transactions-total','#transactionform #transactions textarea' ,'#transactionform #transaction_currency');
  }
}

function getTransactionTotalFromMultiple($target) {
  var text = "";
  var lines = [];
  var total = 0;
  var words = [];
  var i = 0;

  text = $target.val();
  lines = text.split('\n');

  for (i=0; i<lines.length; i++){
    if (lines[i].length > 0){
      words = lines[i].split(' ');
      if (words.length > 0){
        if (!isNaN(words[words.length - 1])){
          total += parseFloat(words[words.length - 1])
        }
      }
    }
  }

  return total;
}

function updateTransactionResult(rateTarget, resultTarget, amountTarget, isMultiple){
  $rateTarget = $(rateTarget);
  $resultTarget = $(resultTarget);
  $amountTarget = $(amountTarget);
  if($resultTarget.is(":visible")){
    var rate = $rateTarget.val();
    var amount = 0;
    if (!isMultiple){
      amount = $amountTarget.val();
    } else{
      amount = getTransactionTotalFromMultiple($amountTarget);
    }

    result = Math.round((amount * rate) * 100) / 100

    $resultTarget.val(result);
  }

  if(isMultiple){
    updateTransactionsTotal('#transactionform #transactions-total','#transactionform #transactions textarea' ,'#transactionform #transaction_currency');
  }
}

function updateTransactionRate(rateTarget, resultTarget, amountTarget1, amountTarget2){
  var $rateTarget = $(rateTarget);
  var $resultTarget = $(resultTarget);
  var $amountTarget1 = $(amountTarget1);
  var $amountTarget2 = $(amountTarget2);
  var isMultiple = false;
  var $amountTarget = $();
  var result = 0;
  var amount = 0;
  var rate = 0;

  if ($amountTarget1.is(":visible")) {
    $amountTarget = $amountTarget1;
  } else if ($amountTarget2.is(":visible")) {
    $amountTarget = $amountTarget2;
    isMultiple = true;
  } else {
    return
  }

  if($resultTarget.is(":visible")){
    result = $resultTarget.val();
    if (!isMultiple){
      amount = $amountTarget.val();
    } else{
      amount = getTransactionTotalFromMultiple($amountTarget);
    }

    rate = result / amount
    $rateTarget.val(rate);
  }
}

function changeTransactionAccount(selectObject) {
  var account = selectObject.value;

  $('#transactionform #transaction_account').val(account);
  $('#transactionform #transaction_from_account').val(account);

  if (!currencyChanged){
    $.ajax({
      type: "GET",
      dataType: "text",
      url: "/api/account_currency/" + account,
      success: function(data) {
        $("#transactionform #transaction_currency").val(data);
      }
    });
  } else {
    changeTransactionCurrency($('#transactionform #transaction_currency').val());
  }
}

function changeTransactionCurrency(selectObject='', currency='') {
  var account = "";
  var result = 0;

  $('#transactionform #currency-rate').hide();
  $('#transactionform #currency-result').hide();

  currencyChanged = true;
  if(currency.length == 0){
    var currency = selectObject.value;
  }

  account = $('#transactionform #single-account select').val();

  $.ajax({
    type: "GET",
    dataType: "text",
    url: "/api/account_currency/" + account,
    success: function(data_currency) {
      if (data_currency != currency){
        $('#transactionform #exchange_rate_spinner').show();
        $.ajax({
          type: "GET",
          dataType: "text",
          url: "/api/currency_rate/" + currency + "/" + data_currency,
          success: function(data_rate) {
            $('#transactionform #exchange_rate_spinner').hide();
            $('#transactionform #currency-rate').show();
            $('#transactionform #currency-result').show();
            $('#transactionform #currency-rate input').val(data_rate);

            if ($('#transactionform #amount').is(":visible")){
              result = $('#transactionform #amount input').val() * data_rate
            } else{
              result = getTransactionTotalFromMultiple($('#transactionform #transactions textarea')) * data_rate
            }

            $('#transactionform #currency-result input').val(Math.round(result * 100) / 100);
          }
        });

      } else {
        $('#transactionform #currency-rate').hide();
        $('#transactionform #currency-result').hide();
        $('#transactionform #currency-rate input').val('');
        $('#transactionform #currency-result input').val('');
      }
    }
  });
  updateTransactionsTotal('#transactionform #transactions-total','#transactionform #transactions textarea' ,'#transactionform #transaction_currency');
}

function updateTransactionsTotal(targetTotal, targetTransactions, targetCurrency){
  var $targetTotal = $(targetTotal);
  var $targetTransactions = $(targetTransactions);
  var $targetCurrency = $(targetCurrency);

  var total = getTransactionTotalFromMultiple($targetTransactions);
  total = total.toString().replace('.', '$');
  var currency = $targetCurrency.val();

  $.ajax({
    type: 'GET',
    dataType: 'text',
    url: '/api/format_currency/' + total + '/' + currency + '/true',
    success: function(data) {
      $targetTotal.text(data);
    }
  });
}

function resetAccountMenu(){
  $('#accountform').find("input[type=text], textarea").val("");

  $.ajax({
    type: "GET",
    dataType: "text",
    url: "/api/account_currency/",
    success: function(data) {
      $('#accountform').find('select').val(data);
    }
  });
}

function resetTransactionMenu(){
  var active_account = "";
  var account = "";
  var optionHtml = "";

  currencyChanged = false;

  // update the active account field
  active_account = getActiveAccountName();
  $('#transactionform #active_account_field').val(active_account);
  if (active_account) {
    $('#transactionform #transaction_account').val(active_account);
    $('#transactionform #transaction_from_account').val(active_account);
  } else {
    $("#transactionform #transaction_account").val($("#transactionform #transaction_account option:first").val());
    $("#transactionform #transaction_from_account").val($("#transactionform #transaction_from_account option:first").val());
  }
  $("#transactionform #transaction_to_account").val($("#transactionform #transaction_to_account option:first").val());

  // reset the button-group elements
  $('#transactionform #button-group').each(function(index){
    $(this).find('input').each(function(i){
      $(this).prop("checked", i==0)
    });
    $(this).find('label').each(function(i){
      if(i == 0){
        $(this).addClass('active');
      } else {
        $(this).removeClass('active');
      }
    });
  });

  // reset the text inputs
  $('#transactionform input.form-control, #transactionform textarea.form-control').each(function(index){
    $(this).val('');
  });

  // update date & time
  $('#transactionform #transaction_date').val(get_date());
  $('#transactionform #transaction_time').val(get_time());

  // reset type color
  changeTransactionType('expense');

  // update account & currency dropdowns
  account = $('#transactionform #single-account select').val();
  if (account) {
    $('#transactionform #transaction_active_account').val(account);

    $.ajax({
      type: "GET",
      dataType: "text",
      url: "/api/account_currency/" + account,
      success: function(data) {
        $("#transactionform #transaction_currency").val(data);
      }
    });
  } else {
    $.ajax({
      type: "GET",
      dataType: "text",
      url: "/api/user_currency",
      success: function(data) {
        $("#transactionform #transaction_currency").val(data);
      }
    });
  }

  // update the category dropdown
  $('#transactionform #transaction_category_id').val(0);
  optionHtml = $('#transactionform #categoriesDropdownOptions').find('li').first().html();
  $('#transactionform button#categories-dropdown').html(optionHtml);

  // show & hide correct fields
  $('#transactionform div.default-show').show();
  $('#transactionform div.default-hide').hide();
}