ToggleCardForm('#transactionmenu');

var active_account = '<%= @params[:active_account] %>';

<%= puts @transactions.to_yaml %>
<% @transactions.each do |t| %>
  // if transaction isn't a child of another transaction
  var parent = parseInt('<%= t.parent_id %>');
  if (isNaN(parent)) {
    // check if the transaction should be shown in the current view
    <% account = current_user.accounts.find(t.account_id) %>
    var t_account = '<%= account.name %>';
    var active_account = '<%= @params[:active_account] %>';
    var account_currency_amount = <%= t.account_currency_amount %>;

    var account_currency = '<%= current_user.accounts.where(name: @params[:active_account]).take.currency %>';

    if (active_account.length == 0 || active_account == t_account) {
      // find all days shown in view
      var days = []
      $('#transactions_list div').each(function(index){
        if (typeof $(this).attr('id') !== "undefined"){
          days.push($(this).attr('id'));
        }
      });

      // get transaction date and time
      var t_date = '<%= t.local_datetime.to_s.split[0] %>'
      var t_time = '<%= t.local_datetime.to_s.split[1] %>'

      // check if there is a UL for the date
      var $dayUL = $('#' + t_date + " ul");

      if ($dayUL.length == 0) {
        // if there is no UL, render decide where to one
        if (days.length == 0 ) {
          GenerateDayUL(t_date, $("#transactions_list"), "prepend", account_currency, account_currency_amount);
        } else if (DayToNum(t_date) > DayToNum(days[0])) {
          GenerateDayUL(t_date, $("#transactions_list"), "prepend", account_currency, account_currency_amount);
        } else if (DayToNum(t_date) > DayToNum(days[days.length-1])) {
          for (var i = 0; i < days.length; i++) {
            if (DayToNum(t_date) > DayToNum(days[i])){
              GenerateDayUL(t_date, $("#" + days[i]), "before", account_currency, account_currency_amount);
              break;
            }
          }
        } else {
          GenerateDayUL(t_date, $("#transactions_list"), "append", account_currency, account_currency_amount);
        }
      }

    }
  }
<% end %>

// takes day and returns numeric value
// "2019-02-28" returns 20190228
function DayToNum(str) {
  var num = str.replace(/-/g, "");
  return parseInt(num);
}

function GenerateDayUL(date, $target, type, account_currency, amount) {
  $.ajax({
    type: "GET",
    dataType: "text",
    url: '/api/transaction_date_ul/' + date + '/' + amount.toString() + '/' + account_currency,
    success: function(data) {
      switch (type) {
        case "prepend":
          $target.prepend(data);
          break;
        case "append":
          $target.append(data);
          break;
        case "before":
          $(data).insertBefore($target);
          break;
      }
    }
  });

  
}

function RenderDayUL(d, d_formatted, day_total){
  return "<%= escape_javascript("#{render :partial => 'accounts/transactions_date', :locals => { :d => "2019-02-14", :d_formatted => "Today", :day_total => 555, :account_currency => 'CAD' }}").html_safe %>"
}