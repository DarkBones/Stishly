ToggleCardForm('#transactionmenu');

var active_account = '<%= @params[:active_account] %>';

<%= puts @transactions.to_yaml %>
<% @transactions.each do |t| %>
  // if transaction isn't a child of another transaction
  var parent = parseInt('<%= t.parent_id %>');
  if (isNaN(parent)) {
    // check if the transaction should be shown in the current view
    <% account = current_user.accounts.find(t.account_id) %>
    var t_account = '<%= account.name %>';
    var active_account = '<%= @params[:active_account] %>';
    var account_currency_amount = <%= t.account_currency_amount %>;

    var account_currency = '<%= Account.get_account_or_user_currency(@params[:active_account], current_user) %>';

    if (active_account.length == 0 || active_account == t_account) {
      // find all days shown in view
      var days = []
      $('#transactions_list div').each(function(index){
        if (typeof $(this).attr('id') !== "undefined"){
          days.push($(this).attr('id'));
        }
      });

      // get transaction date and time
      var t_date = '<%= t.local_datetime.to_s.split[0] %>'
      var t_time = '<%= t.local_datetime.to_s.split[1] %>'

      // check if there is a UL for the date
      var $dayDiv = GetdayDiv(t_date, days);
      //$dayDiv = $('#' + t_date);
      $dayDiv = $('#2019-02-15');

      $dayDiv.ready(function() {
        console.log('READY');
        console.log($dayDiv.attr('id'));
      });

      console.log($dayDiv.attr('id'));
      $dayDiv.prepend("HELLO");
      $('#' + t_date).append("bye");

    }
  }
<% end %>

// takes day and returns numeric value
// "2019-02-28" returns 20190228
function DayToNum(str) {
  var num = str.replace(/-/g, "");
  return parseInt(num);
}

// returns the correct list element for the transaction time
function GetdayDiv(t_date, days) {
  // get the day UL
  var $dayDiv = $('#' + t_date);

  // if no UL exists for the date, create one
  if ($dayDiv.length == 0) {
    CreateNewdayDiv(t_date, days)
    $dayDiv = $('#' + t_date);
  }

  return $dayDiv
}

// creates a new list element for transaction date
function CreateNewdayDiv(t_date, days) {
  var account_currency = '<%= Account.get_account_or_user_currency(@params[:active_account], current_user) %>';

  if (days.length == 0 || DayToNum(t_date) > DayToNum(days[0])) {
    // if no days exist in the ul, or the transaction is earlier than the earliest date, prepend a new one to #transactionslist
    GeneratedayDiv(t_date, $("#transactions_list"), "prepend", account_currency, 0);
  } else if (DayToNum(t_date) > DayToNum(days[days.length-1])) {
    // if the transaction date is between the first and last day on the page, iterate through the days to find the correct place
    for (var i = 0; i < days.length; i++) {
      if (DayToNum(t_date) > DayToNum(days[i])){
        GeneratedayDiv(t_date, $("#" + days[i]), "before", account_currency, 0);
        break;
      }
    }
  } else if ($('#transactions_list li').length % 30 != 0) { // TODO: Replace 30 with endless page system parameter
    // if the transaction is later than all days, put it on the end if there is room on the page (keep endless pagination in mind)
    GeneratedayDiv(t_date, $("#transactions_list"), "append", account_currency, 0);
  }
}

// generate a new list element via an ajax job
function GeneratedayDiv(date, $target, type, account_currency, amount) {
  $.ajax({
    type: "GET",
    dataType: "text",
    url: '/api/transaction_date_ul/' + date + '/' + amount.toString() + '/' + account_currency,
    success: function(data) {
      switch (type) {
        case "prepend":
          $target.prepend(data);
          break;
        case "append":
          $target.append(data);
          break;
        case "before":
          $(data).insertBefore($target);
          break;
      }
    }
  }).done(function() {
    $('#2019-02-15').append('SUCCES');
  });
}