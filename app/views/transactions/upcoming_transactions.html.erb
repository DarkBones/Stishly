<%= render partial: "edit_upcoming_transaction" %>

<div class="container hide-pagination">
  <div class="row">
    <div class="col-12">

    	<h2>Upcoming Transactions</h2>
    	<p>Transactions scheduled between now and <%= User.format_date(@date + 1.day, true) %></p>

    	<% if @transactions.length == 0 %>
    		<p>No transactions scheduled for now</p>
    	<% else %>
    		<table>
    			<th>Date</th>
    			<th>Schedule</th>
    			<th>Description</th>
    			<th>Amount</th>
    			<th></th>
	    		<%= render :partial => "upcoming_transactions_list", :collection => @transactions, :as => :transaction %>
	    	</table>
    	<% end %>

    </div>
  </div>
</div>

<script>
  var originalTId; // the id of the transaction occurrence to be edited

  function editUpcomingTransactionOccurrence(obj) {
    var transactionId = $(obj).parents("tr").attr("series-id");
    var scheduleId = $(obj).parents("tr").attr("schedule");
    var schedulePeriod = $(obj).parents("tr").attr("period");
    var tId = $(obj).parents("tr").attr("id").split("_")[1];
    var scheduledTransactionId = $(obj).parents("tr").attr("scheduled-transaction")
    
    originalTId = tId;

    $("#edit_upcoming_transaction_form_fields").html("");
    $.ajax({
      type: "GET",
      dataType: "html",
      url: "/api/v1/forms/transactions/upcoming/edit_occurrence/" + transactionId.toString() + "/" + scheduleId.toString() + "/" + schedulePeriod.toString() + "/" + scheduledTransactionId.toString(),
      beforeSend() {
        insertAjaxSpinner($("#edit_upcoming_transaction_form_fields"));
      },
      success(data) {
        $("#edit_upcoming_transaction_form_fields").html(data);
        setDatepickers();
        addLadderformListeners();
        setTimezones();
      }
    });
  }

  function editUpcomingTransactionSeries(obj) {
    var transactionId = $(obj).parents("tr").attr("series-id");

    originalTId = transactionId;

    $("#edit_upcoming_transaction_form_fields").html("");
    $.ajax({
      type: "GET",
      dataType: "html",
      url: "/api/v1/forms/transactions/upcoming/edit_series/" + transactionId.toString(),
      beforeSend() {
        insertAjaxSpinner($("#edit_upcoming_transaction_form_fields"));
      },
      success(data) {
        $("#edit_upcoming_transaction_form_fields").html(data);
        setDatepickers();
        addLadderformListeners();
        setTimezones();
      }
    });
  }

  function cancelUpcomingTransaction(obj) {
    var transactionId = $(obj).parents("tr").attr("series-id");
    var scheduleId = $(obj).parents("tr").attr("schedule");
    var schedulePeriod = $(obj).parents("tr").attr("period");
    var tId = $(obj).parents("tr").attr("id").split("_")[1];

    originalTId = tId;

    $.ajax({
      type: "PUT",
      url: "/api/v1/transactions/" + transactionId.toString() + "/cancel_upcoming_occurrence/" + scheduleId.toString() + "/" + schedulePeriod.toString(),
      success(data) {
        triggerNotice("Transaction successfully cancelled", false);
        $("#transaction_" + tId.toString()).addClass("upcoming-cancelled");
        
        $("#transaction_" + tId.toString() + " #upcoming-dropdown").html("");
        $.ajax({
          type: "GET",
          dataType: "html",
          url: "api/v1/render/upcoming_transaction/" + transactionId.toString() + "/dropdown",
          success(data) {
            console.log(data);
            $("#transaction_" + tId.toString() + " #upcoming-dropdown").html(data);
          },
          error() {
            location.reload();
          }
        });
      },
      error(e) {
        triggerNotice("Unable to cancel transaction", true);
      }
    });
  }

  function uncancelUpcomingTransaction(obj) {
    var transactionId = $(obj).parents("tr").attr("series-id");
    var scheduleId = $(obj).parents("tr").attr("schedule");
    var schedulePeriod = $(obj).parents("tr").attr("period");
    var tId = $(obj).parents("tr").attr("id").split("_")[1];

    originalTId = tId;

    $.ajax({
      type: "PUT",
      url: "/api/v1/transactions/" + transactionId.toString() + "/uncancel_upcoming_occurrence/" + scheduleId.toString() + "/" + schedulePeriod.toString(),
      success(data) {
        triggerNotice("Transaction no longer cancelled", false);
        $("#transaction_" + tId.toString()).removeClass("upcoming-cancelled");

        $("#transaction_" + tId.toString() + " #upcoming-dropdown").html("");
        $.ajax({
          type: "GET",
          dataType: "html",
          url: "api/v1/render/upcoming_transaction/" + transactionId.toString() + "/dropdown",
          success(data) {
            console.log(data);
            $("#transaction_" + tId.toString() + " #upcoming-dropdown").html(data);
          },
          error() {
            location.reload();
          }
        });
      },
      error(e) {
        triggerNotice("Unable to uncancel transaction", true);
      }
    });
  }

  function triggerUpcomingTransaction(obj) {
    var transactionId = $(obj).parents("tr").attr("series-id");
    var scheduleId = $(obj).parents("tr").attr("schedule");
    var schedulePeriod = $(obj).parents("tr").attr("period");
    var tId = $(obj).parents("tr").attr("id").split("_")[1];

    $.ajax({
      type: "PUT",
      url: "/api/v1/transactions/" + transactionId.toString() + "/trigger_upcoming_occurrence/" + scheduleId.toString() + "/" + schedulePeriod.toString(),
      success(data) {
        triggerNotice("Transaction successfully triggered", false);
        $("#transaction_" + tId.toString()).fadeOut(500);

        $.ajax({
          type: "GET",
          dataType: "html",
          url: "/api/v1/render/left_menu",
          success(data) {
            $("#page-left-menu").html(data);
          }
        });
      },
      error(e) {
        triggerNotice("Unable to trigger transaction", true);
      }
    });
  }
</script>